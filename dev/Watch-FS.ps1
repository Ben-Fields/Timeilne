# Watch-FS monitors a given list of files for any changes, and it executes the 
# provided action when any changes are detected. The file paths are relative to 
# the given folder. Subfolders are not monitored. This is a blocking function. 
# No arguments are available to the provided action/handler; however, several 
# useful variables are defined when the provided action script is executed:
#   $fullPath           : Full path of the changed file
#   $name               : Name of the changed file
#   $cwdRelativePath    : Path of the changed file relative to the current directory

# Author: Benjamin Fields

function Watch-FS {
	param(
		[string]$Folder,     # Full path to folder to watch
		[hashtable]$Files,   # File names of files to watch (inside the folder)
		[scriptblock]$Action # Code to execute on file changes
	)
	
	try {
		# Register event listener
		$filter = "*.*"
		$watcher = New-Object IO.FileSystemWatcher $Folder, $filter -Property @{
			IncludeSubdirectories = $false
		}
		$onChanged = Register-ObjectEvent $watcher -EventName "Changed" -SourceIdentifier "MyFSChange"

		Write-Host "(Microsoft .NET System.IO.FileSystemWatcher)"
		Write-Host "PowerShell is watching for changes in $(Resolve-Path -LiteralPath $Folder -Relative). Press Ctrl+C to stop."
		Write-Host ""

		$prevTimeStamp = Get-Date -Year 1
		$prevFullPath = ""

		while ($true) {
			# Wait for event
			$psevtargs = Wait-Event -SourceIdentifier "MyFSChange"
			Remove-Event -EventIdentifier $psevtargs.EventIdentifier
			
			# Get basic event info
			$timeStamp = $psevtargs.TimeGenerated
			$fullPath = $psevtargs.SourceEventArgs.FullPath

			# Don't handle double event generated by some text editors
			if ($fullPath -eq $prevFullPath -and ($timeStamp - $prevTimeStamp).TotalMilliseconds -lt 100) {
				continue
			}
			$prevTimeStamp = $timeStamp
			$prevFullPath = $fullPath

			# Get event info
			$name = $psevtargs.SourceEventArgs.Name
			$changeType = $psevtargs.SourceEventArgs.ChangeType

			$cwdRelativePath = Resolve-Path -LiteralPath $fullPath -Relative

			# Do action if event concerns a relevant file
			if ($Files.Contains($fullPath)) {
				Write-Host "[${timeStamp}] ${cwdRelativePath} was $("$changeType".ToLower())."
				& $Action
			}
		}
	} finally {
		# Cleanup
		Unregister-Event -SourceIdentifier "MyFSChange"
	}
}
